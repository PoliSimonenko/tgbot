from telebot import types
import os
import time
from bot.keyboards import get_back_button, get_main_menu

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—É—Ç–µ–π
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
TOUR_IMAGES_DIR = os.path.join(BASE_DIR, 'static', 'tour')

# –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_tour_status = {}

TOUR_DATA = {
    "üè≠ –ì–ª–∞–≤–Ω—ã–π —Ü–µ—Ö": {
        "description": "–°–µ—Ä–¥—Ü–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ —Å 15 –ø–µ—á–∞–º–∏ –¥–æ 1500¬∞C",
        "photo": "workshop_main.jpg",
        "rooms": {
            "üî® –§–æ—Ä–º–æ–≤–∫–∞": {
                "description": "–†—É—á–Ω–∞—è –≤—ã–¥—É–≤–∫–∞ —Å—Ç–µ–∫–ª–∞. –ü–æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø–µ—Ä–≤—ã–º —ç—Ç–∞–ø–æ–º —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–µ–∫–ª—è–Ω–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π - —Ñ–æ—Ä–º–æ–≤–∫–æ–π. –ó–¥–µ—Å—å –≤—ã —É–∑–Ω–∞–µ—Ç–µ, –∫–∞–∫ –∏–∑ —Ä–∞—Å–∫–∞–ª—ë–Ω–Ω–æ–π —Å—Ç–µ–∫–ª–æ–º–∞—Å—Å—ã –ø–æ–¥ —Ä—É–∫–∞–º–∏ –º–∞—Å—Ç–µ—Ä–∞ —Ä–æ–∂–¥–∞—é—Ç—Å—è –±—É–¥—É—â–∏–µ –≤–∞–∑—ã, –≥—Ä–∞—Ñ–∏–Ω—ã –∏ –±–æ–∫–∞–ª—ã. –≠—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ç—Ä–µ–±—É–µ—Ç –æ—Å–æ–±–æ–≥–æ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞, —Ç–æ—á–Ω–æ—Å—Ç–∏ –∏ —Ç–≤–æ—Ä—á–µ—Å–∫–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞.\n\n üí° –ó–∞ —Å–º–µ–Ω—É –º–∞—Å—Ç–µ—Ä–∞ —Å–æ–∑–¥–∞—é—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∏–¥–æ–≤ –∏–∑–¥–µ–ª–∏–π, –∫–∞–∂–¥—ã–π –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —Ç—Ä–µ–±—É–µ—Ç —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á—ë—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç–µ–∫–ª–æ–º–∞—Å—Å—ã –∏ –∏–¥–µ–∞–ª—å–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏. –ü–æ—Å–ª–µ —Ñ–æ—Ä–º–æ–≤–∫–∏ –∏–∑–¥–µ–ª–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ –ø–µ—á—å –¥–ª—è –æ—Ç–∂–∏–≥–∞, –≥–¥–µ –º–µ–¥–ª–µ–Ω–Ω–æ –æ—Å—Ç—ã–≤–∞—é—Ç –∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞—é—Ç –ø—Ä–æ—á–Ω–æ—Å—Ç—å.",
                "photo": "forming.jpg"
            },
            "üé® –î–µ–∫–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ": {
                "description": "–†—É—á–Ω–∞—è —Ä–æ—Å–ø–∏—Å—å. –í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã —É–≤–∏–¥–∏—Ç–µ, –∫–∞–∫ –º–∞—Å—Ç–µ—Ä–∞ –ø—Ä–µ–≤—Ä–∞—â–∞—é—Ç –æ–±—ã—á–Ω—ã–µ –∑–∞–≥–æ—Ç–æ–≤–∫–∏ –≤ –Ω–∞—Å—Ç–æ—è—â–∏–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∏—Å–∫—É—Å—Å—Ç–≤–∞ —Å –ø–æ–º–æ—â—å—é –≥—Ä–∞–≤–∏—Ä–æ–≤–∫–∏, —Ä–æ—Å–ø–∏—Å–∏ –∏ –¥—Ä—É–≥–∏—Ö —Ç–µ—Ö–Ω–∏–∫. –ö–∞–∂–¥—ã–π —à—Ç—Ä–∏—Ö –∏ —É–∑–æ—Ä - —ç—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫—Ä–æ–ø–æ—Ç–ª–∏–≤–æ–π —Ä–∞–±–æ—Ç—ã –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è —Ö—É–¥–æ–∂–Ω–∏–∫–æ–≤.\n\n‚úÇÔ∏è –†–µ–∑—á–∏–∫–∏ –∏ —à–ª–∏—Ñ–æ–≤–∞–ª—å—â–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –∞–ª–º–∞–∑–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —Å–ª–æ–∂–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –≥—Ä–∞–≤–∏—Ä–æ–≤–∫–∏, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∏–∑—ã—Å–∫–∞–Ω–Ω—ã–π –¥–µ–∫–æ—Ä. –ù–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞–Ω–µ—Å–µ–Ω–∏–µ —É–∑–æ—Ä–∞ –Ω–∞ –Ω–µ–±–æ–ª—å—à–æ–µ –ø–∞—Å—Ö–∞–ª—å–Ω–æ–µ —è–π—Ü–æ –∑–∞–Ω–∏–º–∞–µ—Ç –≤—Å–µ–≥–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç, –æ–¥–Ω–∞–∫–æ —Ç—Ä–µ–±—É–µ—Ç –±–æ–ª—å—à–æ–≥–æ –æ–ø—ã—Ç–∞ –∏ –≤–Ω–∏–º–∞–Ω–∏—è –∫ –¥–µ—Ç–∞–ª—è–º.\n\n‚ú® –ü–æ—Å–ª–µ –¥–µ–∫–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–¥–µ–ª–∏—è –ø–æ–ª–∏—Ä—É—é—Ç –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–∏—Å–ª–æ—Ç–Ω—ã—Ö —Å–º–µ—Å—è—Ö, —á—Ç–æ –ø—Ä–∏–¥–∞—ë—Ç –∏–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–π –±–ª–µ—Å–∫ –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å - –∏–º–µ–Ω–Ω–æ —Ç–∞–∫ —Ä–æ–∂–¥–∞–µ—Ç—Å—è –Ω–∞—Å—Ç–æ—è—â–µ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞.",
                "photo": "decorating.jpg"
            },
            "üî• –ü–µ—á–∏": {
                "description": "12 –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã—Ö –ø–µ—á–µ–π. –ó–∞–≥–ª—è–Ω–∏—Ç–µ –≤ —Å–∞–º–æ–µ —Å–µ—Ä–¥—Ü–µ —Å—Ç–µ–∫–ª–æ–∑–∞–≤–æ–¥–∞ - –≥–æ—Ä—è—á–∏–µ –ø–µ—á–∏, –≥–¥–µ —Ä–æ–∂–¥–∞–µ—Ç—Å—è —Å—Ç–µ–∫–ª–æ. –ó–¥–µ—Å—å –≤—ã —É–∑–Ω–∞–µ—Ç–µ, –∫–∞–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –Ω—É–∂–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, –∫–∞–∫ –ø–ª–∞–≤–∏—Ç—Å—è —Å—Ç–µ–∫–ª–æ–º–∞—Å—Å–∞ –∏ –∫–∞–∫ –≤–∞–∂–Ω–æ —Å–æ–±–ª—é–¥–∞—Ç—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ç–æ–Ω–∫–æ—Å—Ç–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞.\n\n ‚è≥ –ü–æ—Å–ª–µ —Ñ–æ—Ä–º–æ–≤–∫–∏ –∏–∑–¥–µ–ª–∏—è –ø–æ–ø–∞–¥–∞—é—Ç –≤ –ø–µ—á—å –¥–ª—è –æ—Ç–∂–∏–≥–∞ (–Ω–∞–∑—ã–≤–∞–µ–º—É—é –ª–µ—Ä–µ), –≥–¥–µ –ø—Ä–æ–≤–æ–¥—è—Ç –æ—Ç –ø–æ–ª—É—Ç–æ—Ä–∞ –¥–æ –¥–≤—É—Ö —á–∞—Å–æ–≤. –ú–µ–¥–ª–µ–Ω–Ω–æ–µ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –∏ —Ç—Ä–µ—â–∏–Ω—ã, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –ø—Ä–æ—á–Ω–æ—Å—Ç—å –∏ –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å –∏–∑–¥–µ–ª–∏–π.\n\nüí™ –†–∞–±–æ—Ç–∞ —Å –ø–µ—á–∞–º–∏ —Ç—Ä–µ–±—É–µ—Ç –æ—Å–æ–±—ã—Ö –∑–Ω–∞–Ω–∏–π –∏ —Ç–æ—á–Ω–æ—Å—Ç–∏ - –æ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∑–∞–≤–∏—Å–∏—Ç –∫–∞—á–µ—Å—Ç–≤–æ –≤—Å–µ–≥–æ –≤—ã–ø—É—Å–∫–∞–µ–º–æ–≥–æ —Å—Ç–µ–∫–ª–∞.",
                "photo": "furnaces.jpg"
            }
        }
    },
    "üèõÔ∏è –ú—É–∑–µ–π": {
        "description":(
            "üé® *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º—É–∑–µ–π —Å—Ç–µ–∫–ª–æ–∑–∞–≤–æ–¥–∞ ¬´–ù–µ–º–∞–Ω¬ª* - —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –≥–¥–µ —Å–æ–±—Ä–∞–Ω—ã —ç–∫—Å–ø–æ–Ω–∞—Ç—ã, –¥–∞—Ç–∏—Ä—É–µ–º—ã–µ 1910 –≥–æ–¥–æ–º, "
            "–∞ —Ç–∞–∫–∂–µ –∞–≤—Ç–æ—Ä—Å–∫–∏–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ö—É–¥–æ–∂–Ω–∏–∫–æ–≤ –∏ –≤–µ—Ç–µ—Ä–∞–Ω–æ–≤ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è.\n\n"
            "–ó–¥–µ—Å—å –≤—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ—Å—å —Å –±–æ–≥–∞—Ç–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π —Å—Ç–µ–∫–ª–æ–¥–µ–ª–∏—è, —É–≤–∏–¥–∏—Ç–µ —Ñ–∏—Ä–º–µ–Ω–Ω–æ–µ –º–æ–ª–æ—á–Ω–æ-–¥—ã–º—á–∞—Ç–æ–µ —Å—Ç–µ–∫–ª–æ —Å —Ç–æ–Ω—á–∞–π—à–µ–π ¬´–Ω–µ–º–∞–Ω—Å–∫–æ–π –Ω–∏—Ç—å—é¬ª, "
            "–±–ª–∞–≥–æ—Ä–æ–¥–Ω—ã–π —Ö—Ä—É—Å—Ç–∞–ª—å –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∏–∑–¥–µ–ª–∏–π, –æ—Ç–º–µ—á–µ–Ω–Ω—ã—Ö –ø—Ä–µ–º–∏—è–º–∏ –∏ –¥–∏–ø–ª–æ–º–∞–º–∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –≤—ã—Å—Ç–∞–≤–æ–∫. üèÜ\n\n"
            "–í–æ –≤—Ä–µ–º—è —ç–∫—Å–∫—É—Ä—Å–∏–∏ –≤—ã —É–≤–∏–¥–∏—Ç–µ –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ —Å—Ç–µ–∫–ª–∞ - –æ—Ç —Ä–∞—Å–∫–∞–ª—ë–Ω–Ω–æ–π –º–∞—Å—Å—ã –¥–æ –∏–∑—è—â–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π, —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –≤—Ä—É—á–Ω—É—é –º–∞—Å—Ç–µ—Ä–∞–º–∏. "
            "–≠—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–æ—Ä–∞–∂–∏–≤–∞–µ—Ç –∏ –æ—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–µ–∏–∑–≥–ª–∞–¥–∏–º–æ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ! üî•\n\n"
            "–ú—É–∑–µ–π –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –≤—Å–µ—Ö –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π, –∞ —ç–∫—Å–∫—É—Ä—Å–∏–∏ –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è —Å –æ–ø—ã—Ç–Ω—ã–º –≥–∏–¥–æ–º, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –æ –∫–∞–∂–¥–æ–º —ç–∫—Å–ø–æ–Ω–∞—Ç–µ –∏ –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã. "
            "–ü–æ—Å–ª–µ –ø–æ—Å–µ—â–µ–Ω–∏—è –º—É–∑–µ—è –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è –≤ —Ñ–∏—Ä–º–µ–Ω–Ω–æ–º –º–∞–≥–∞–∑–∏–Ω–µ - –Ω–∞—Å—Ç–æ—è—â–µ–º –º—É–∑–µ–µ-–º–∞–≥–∞–∑–∏–Ω–µ —Å –ª—É—á—à–∏–º–∏ —Ä–∞–±–æ—Ç–∞–º–∏ –∑–∞–≤–æ–¥–∞. üéÅ"
        ),
        "photo": "museum.jpg",
        "halls": {
            "üï∞Ô∏è –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∑–∞–ª": {
                "description": ("üï∞ *–≠–∫—Å–ø–æ–Ω–∞—Ç—ã XIX-XX –≤–µ–∫–æ–≤* - –ø–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É —É—à–µ–¥—à–∏—Ö —ç–ø–æ—Ö –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –º–∞—Å—Ç–µ—Ä–∞–º–∏ ¬´–ù–µ–º–∞–Ω–∞¬ª –±–æ–ª–µ–µ –≤–µ–∫–∞ –Ω–∞–∑–∞–¥.\n\n"
            "–ó–¥–µ—Å—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã —Ä–µ–¥–∫–∏–µ –æ–±—Ä–∞–∑—Ü—ã —Å—Ç–µ–∫–ª—è–Ω–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π, –æ—Ç—Ä–∞–∂–∞—é—â–∏–µ –±–æ–≥–∞—Ç—É—é –∏—Å—Ç–æ—Ä–∏—é –∏ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏ –∑–∞–≤–æ–¥–∞, –æ—Å–Ω–æ–≤–∞–Ω–Ω–æ–≥–æ –≤ 1883 –≥–æ–¥—É. "
            "–í—ã —É–≤–∏–¥–∏—Ç–µ, –∫–∞–∫ –º–µ–Ω—è–ª–∏—Å—å —Å—Ç–∏–ª–∏ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –æ—Ç –ø–µ—Ä–≤—ã—Ö —Ñ–æ—Ä–º –º–æ–¥–µ—Ä–Ω–∞ –¥–æ –∏–∑—è—â–Ω—ã—Ö –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö —Ä–µ—à–µ–Ω–∏–π –Ω–∞—á–∞–ª–∞ XX –≤–µ–∫–∞.\n\n"
            "–í –º—É–∑–µ–µ —Å–æ–±—Ä–∞–Ω—ã –∏–∑–¥–µ–ª–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –∫–æ–≥–¥–∞-—Ç–æ —É–∫—Ä–∞—à–∞–ª–∏ –¥–æ–º–∞ –∏ –¥–≤–æ—Ä—Ü—ã, –∞ —Ç–∞–∫–∂–µ —Å–ª—É–∂–∏–ª–∏ –≤–∞–∂–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –±—ã—Ç–∞ –∏ –∫—É–ª—å—Ç—É—Ä—ã."
        ),
                "photo": "historical_hall.jpg",
                "exhibits": {
                    "üç∑ –í–∞–∑–∞ '–†—É–±–∏–Ω' (1890)": {
                        "description":  (
                    "‚ú® *–ü–µ—Ä–≤–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è –∑–∞–≤–æ–¥–∞.* –û–¥–∏–Ω –∏–∑ —Å—Ç–∞—Ä–µ–π—à–∏—Ö —ç–∫—Å–ø–æ–Ω–∞—Ç–æ–≤ –º—É–∑–µ—è, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –≤ –∫–æ–Ω—Ü–µ XIX –≤–µ–∫–∞. "
                    "–≠—Ç–∞ –≤–∞–∑–∞ –ø–æ—Ä–∞–∂–∞–µ—Ç –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–º —Ä—É–±–∏–Ω–æ–≤—ã–º —Ü–≤–µ—Ç–æ–º –∏ –∏–∑—è—â–Ω–æ–π —Ñ–æ—Ä–º–æ–π, —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É—è –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ –ø–µ—Ä–≤—ã—Ö —Å—Ç–µ–∫–ª–æ–¥—É–≤–æ–≤ ¬´–ù–µ–º–∞–Ω–∞¬ª."
                ),
                        "photo": "ruby_vase.jpg"
                    },
                    "üè∫ –ì—Ä–∞—Ñ–∏–Ω '–ù–µ–º–∞–Ω' (1925)": {
                        "description": (
                    "üé© *–ö–ª–∞—Å—Å–∏–∫–∞ —Å—Ç–∏–ª—è.* –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –≥—Ä–∞—Ñ–∏–Ω, –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π –≤ –ª–∞–∫–æ–Ω–∏—á–Ω–æ–º —Å—Ç–∏–ª–µ 1920-—Ö –≥–æ–¥–æ–≤. "
                    "–ï–≥–æ —Å—Ç—Ä–æ–≥–∏–µ –ª–∏–Ω–∏–∏ –∏ —É—Ç–æ–Ω—á—ë–Ω–Ω—ã–π –¥–µ–∫–æ—Ä –æ—Ç—Ä–∞–∂–∞—é—Ç –¥—É—Ö —ç–ø–æ—Ö–∏ –º–µ–∂–≤–æ–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ –∏ –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞."
                ),
                        "photo": "neman_decanter.jpg"
                    }
                }
            },
            "‚ú® –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∑–∞–ª": {
                "description": (
            "üëã *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∑–∞–ª*, –≥–¥–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏ —Å—Ç–µ–∫–ª–æ–¥–µ–ª–∏—è –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è —Å *–∏–Ω–Ω–æ–≤–∞—Ü–∏—è–º–∏* –∏ *–∞–≤—Ç–æ—Ä—Å–∫–∏–º —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ–º*! ‚ú®\n\n"
            "–ó–¥–µ—Å—å —Å–æ–±—Ä–∞–Ω—ã –ª—É—á—à–∏–µ —Ä–∞–±–æ—Ç—ã –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ª–µ—Ç - —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –º–∞—Å—Ç–µ—Ä–∞–º–∏ –∑–∞–≤–æ–¥–∞ ¬´–ù–µ–º–∞–Ω¬ª —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–æ–≤–µ–π—à–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ —Å–º–µ–ª—ã—Ö —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–¥–µ–π.\n\n"
            "–í—ã —É–≤–∏–¥–∏—Ç–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø—Ä–µ–¥–º–µ—Ç—ã, –∞ –Ω–∞—Å—Ç–æ—è—â–∏–µ *–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∏—Å–∫—É—Å—Å—Ç–≤–∞*, –æ—Ç—Ä–∞–∂–∞—é—â–∏–µ –¥—É—Ö –≤—Ä–µ–º–µ–Ω–∏ –∏ —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∫ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É. "
            "–ö–∞–∂–¥–∞—è —Ä–∞–±–æ—Ç–∞ - —Ä–µ–∑—É–ª—å—Ç–∞—Ç —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ —Å —Ñ–æ—Ä–º–æ–π, —Å–≤–µ—Ç–æ–º –∏ —Ñ–∞–∫—Ç—É—Ä–æ–π, –≤–æ–ø–ª–æ—â–µ–Ω–∏–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞. üé®"
            ),
                "photo": "modern_hall.jpg",
                "exhibits": {
                    "üíé –°–∫—É–ª—å–ø—Ç—É—Ä–∞ '–õ–µ–¥'": {
                        "description": (
                    "‚ùÑÔ∏è *–ü–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ –º–∏—Ä —á–∏—Å—Ç–æ—Ç—ã –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏!* –≠—Ç–∞ –∏–∑—ã—Å–∫–∞–Ω–Ω–∞—è —Å–∫—É–ª—å–ø—Ç—É—Ä–∞, —Å–æ–∑–¥–∞–Ω–Ω–∞—è –≤ 2020 –≥–æ–¥—É, –ø–æ—Ä–∞–∂–∞–µ—Ç —Å–≤–æ–∏–º *–∫—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–º –±–ª–µ—Å–∫–æ–º* –∏ —É—Ç–æ–Ω—á—ë–Ω–Ω—ã–º–∏ –ª–∏–Ω–∏—è–º–∏. "
                    "–û–Ω–∞ —Å–ª–æ–≤–Ω–æ –∑–∞–ø–µ—á–∞—Ç–ª–µ–ª–∞ –º–≥–Ω–æ–≤–µ–Ω–∏–µ –∑–∏–º–Ω–µ–π —Å–≤–µ–∂–µ—Å—Ç–∏, –ø–µ—Ä–µ–¥–∞–≤–∞—è —Ö—Ä—É–ø–∫–æ—Å—Ç—å –∏ –∫—Ä–∞—Å–æ—Ç—É –ª—å–¥–∞ –≤ –∫–∞–∂–¥–æ–º –∏–∑–≥–∏–±–µ."
                ),
                        "photo": "ice_sculpture.jpg"
                    },
                    "üåå –ö–æ–º–ø–æ–∑–∏—Ü–∏—è '–ì–∞–ª–∞–∫—Ç–∏–∫–∞'": {
                        "description": (
                    "üöÄ *–û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –∫–æ—Å–º–∏—á–µ—Å–∫–æ–µ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ!* –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –∫–æ–º–ø–æ–∑–∏—Ü–∏—è, –Ω–∞–≤–µ—è–Ω–Ω–∞—è –∑–∞–≥–∞–¥–∫–∞–º–∏ –í—Å–µ–ª–µ–Ω–Ω–æ–π, –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ –∞–≤—Ç–æ—Ä—Å–∫–∏—Ö –ø—Ä–∏—ë–º–æ–≤. "
                    "–í–Ω—É—Ç—Ä–∏ —Å—Ç–µ–∫–ª—è–Ω–Ω–æ–π —Å—Ñ–µ—Ä—ã —Å–ª–æ–≤–Ω–æ –∑–∞—Å—Ç—ã–ª–∏ –∑–≤—ë–∑–¥—ã –∏ —Ç—É–º–∞–Ω–Ω–æ—Å—Ç–∏, —Å–æ–∑–¥–∞–≤–∞—è –æ—â—É—â–µ–Ω–∏–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏ –∏ —Ç–∞–π–Ω—ã –∫–æ—Å–º–æ—Å–∞."
                ),
                        "photo": "galaxy_composition.jpg"
                    }
                }
            }
        }
    }
}


def register_handlers(bot):
    @bot.message_handler(func=lambda msg: msg.text == "üè≠ –ì–∏–¥ –ø–æ –∑–∞–≤–æ–¥—É")
    def start_tour(message):
        user_tour_status[message.chat.id] = {
            "current_location": "main",
            "current_zone": None,
            "current_hall": None
        }
        show_zones_menu(message.chat.id, bot)

    def show_zones_menu(chat_id, bot):
        markup = create_markup(list(TOUR_DATA.keys()))
        bot.send_message(
            chat_id,
            "*üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –º—É–∑–µ–π —Å—Ç–µ–∫–ª–æ–∑–∞–≤–æ–¥–∞ '–ù–µ–º–∞–Ω'!* - —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –≥–¥–µ –æ–∂–∏–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—è –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å –±–µ–ª–æ—Ä—É—Å—Å–∫–æ–≥–æ —Å—Ç–µ–∫–ª–æ–¥–µ–ª–∏—è! ‚ú®\n\n"
            "–ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ —Å–æ–≤–µ—Ä—à–∏—Ç—å —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –∑–∞–ª–∞–º, –ø–æ—Å–≤—è—â—ë–Ω–Ω—ã–º —Ä–∞–∑–Ω—ã–º —ç–ø–æ—Ö–∞–º –∏ —ç—Ç–∞–ø–∞–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞, —É–∑–Ω–∞—Ç—å –æ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã—Ö –∏–∑–¥–µ–ª–∏—è—Ö –∏ —É–≤–∏–¥–µ—Ç—å —Ä–µ–¥–∫–∏–µ —ç–∫—Å–ø–æ–Ω–∞—Ç—ã –≤ –º–µ–ª—å—á–∞–π—à–∏—Ö –¥–µ—Ç–∞–ª—è—Ö. üîç\n\n"
            "üè≠ *–í –º—É–∑–µ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã:*\n"
            "‚Ä¢ *–ì–ª–∞–≤–Ω—ã–π —Ü–µ—Ö* - –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —ç–∫—Å–∫—É—Ä—Å–∏—è –ø–æ —ç—Ç–∞–ø–∞–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞: —Ñ–æ—Ä–º–æ–≤–∫–∞, –¥–µ–∫–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ, —Ä–∞–±–æ—Ç–∞ –ø–µ—á–µ–π. üî•\n"
            "‚Ä¢ *–ú—É–∑–µ–π* - –¥–≤–∞ –∑–∞–ª–∞: –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π, –≥–¥–µ –≤—ã —É–≤–∏–¥–∏—Ç–µ –∫–∞–∫ —à–µ–¥–µ–≤—Ä—ã –ø—Ä–æ—à–ª–æ–≥–æ, —Ç–∞–∫ –∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –º–∞—Å—Ç–µ—Ä–æ–≤. üñºÔ∏è\n\n"
            "üîé *–í—ã–±–µ—Ä–∏—Ç–µ –∑–æ–Ω—É –¥–ª—è –ø–æ—Å–µ—â–µ–Ω–∏—è:*",
            reply_markup=markup,
            parse_mode="Markdown"
        )
        user_tour_status[chat_id]["current_location"] = "zones"

    @bot.message_handler(func=lambda msg: user_tour_status.get(msg.chat.id) and msg.text in TOUR_DATA)
    def show_zone(message):
        chat_id = message.chat.id
        zone_name = message.text
        zone = TOUR_DATA[zone_name]  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–æ–Ω—ã

        user_tour_status[chat_id] = {
            "current_location": "zone",
            "current_zone": zone_name,
            "current_hall": None
        }
        #zone = TOUR_DATA[zone_name]

        # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–µ—Ö–∞
        if zone_name == "üè≠ –ì–ª–∞–≤–Ω—ã–π —Ü–µ—Ö":
            send_workshop_messages(chat_id, bot,zone)
        else:
            send_zone_info(chat_id, bot, zone_name, zone)
            show_zone_submenu(chat_id, bot, zone)



    def send_zone_info(chat_id, bot, zone_name, zone):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–æ–Ω–µ (–∫—Ä–æ–º–µ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–µ—Ö–∞)"""
        send_message_with_photo(
            bot, chat_id,
            caption=f"{zone_name}\n\n{zone['description']}",
            photo_path=zone['photo']
        )


    def send_workshop_messages(chat_id, bot, zone):
        """–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ –≥–ª–∞–≤–Ω–æ–º —Ü–µ—Ö–µ"""

        if chat_id not in user_tour_status:
            user_tour_status[chat_id] = {
                "current_location": "main",
                "current_zone": None,
                "current_hall": None
            }
        messages = [
            {
                "text": "üî• *–ì–ª–∞–≤–Ω—ã–π —Ü–µ—Ö —Å—Ç–µ–∫–ª–æ–∑–∞–≤–æ–¥–∞ ¬´–ù–µ–º–∞–Ω¬ª* (1/5)\n\n–≠—Ç–æ —Å–µ—Ä–¥—Ü–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞, –≥–¥–µ —Ä–æ–∂–¥–∞—é—Ç—Å—è —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å—Ç–µ–∫–ª—è–Ω–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è. –ó–¥–µ—Å—å –ø—Ä–æ—Ö–æ–¥—è—Ç –∫–ª—é—á–µ–≤—ã–µ —ç—Ç–∞–ø—ã: —Ñ–æ—Ä–º–æ–≤–∫–∞, –¥–µ–∫–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞–±–æ—Ç–∞ –ø–µ—á–µ–π. –°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –∏ —Ç—Ä–∞–¥–∏—Ü–∏–∏ –º–∞—Å—Ç–µ—Ä–æ–≤ —Å–æ–∑–¥–∞—é—Ç –ø—Ä–æ–¥—É–∫—Ü–∏—é, –∏–∑–≤–µ—Å—Ç–Ω—É—é –≤–æ –≤—Å–µ–º –º–∏—Ä–µ.",
                "photo": "workshop_main.jpg",
                "delay": 5
            },
            {
                "text": "üìú *–ò—Å—Ç–æ—Ä–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–µ—Ö–∞* (2/5)\n\n–í –Ω–∞—á–∞–ª–µ 1960-—Ö –≥–æ–¥–æ–≤ –Ω–∞ –∑–∞–≤–æ–¥–µ –Ω–∞—á–∞–ª–∞—Å—å –º–∞—Å—à—Ç–∞–±–Ω–∞—è —Ä–µ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: –ø–æ—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–æ—Å—Ç–æ—Ä–Ω—ã–µ –∫–æ—Ä–ø—É—Å–∞ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–µ–π, –∞ —Å—Ç–µ–∫–ª–æ–≤–∞—Ä–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–æ –Ω–∞ –ø—Ä–∏—Ä–æ–¥–Ω—ã–π –≥–∞–∑. –ò–º–µ–Ω–Ω–æ –∑–¥–µ—Å—å –≤–ø–µ—Ä–≤—ã–µ –≤ —Å—Ç—Ä–∞–Ω–µ –±—ã–ª–æ –≤–Ω–µ–¥—Ä–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –∏–∑–¥–µ–ª–∏–π –Ω–∞ –Ω–æ–∂–∫–µ - –¥–æ 6 –º–∏–ª–ª–∏–æ–Ω–æ–≤ —à—Ç—É–∫ –≤ –≥–æ–¥!",
                "photo": "workshop_history.jpg",
                "delay": 5
            },
            {
                "text": "üé® *–†–∞–±–æ—Ç–∞ –º–∞—Å—Ç–µ—Ä–æ–≤* (3/5)\n\n–†–∞–±–æ—Ç–∞ —É –ø–µ—á–µ–π - —Å–≤—è—â–µ–Ω–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è —Å—Ç–µ–∫–ª–æ–¥—É–≤–æ–≤. –ò–∑–≤–ª–µ—á—ë–Ω–Ω–æ–µ –∏–∑ –ø–µ—á–∏ —Å—Ç–µ–∫–ª–æ –±—ã—Å—Ç—Ä–æ –æ—Å—Ç—ã–≤–∞–µ—Ç, –∏ –º–∞—Å—Ç–µ—Ä–∞ –∑–∞ —Å—á–∏—Ç–∞–Ω–Ω—ã–µ –º–∏–Ω—É—Ç—ã –ø—Ä–∏–¥–∞—é—Ç –µ–º—É —Ñ–æ—Ä–º—É. –í—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –∏ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è - –∑–∞–ª–æ–≥ –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –∫—Ä–∞—Å–æ—Ç—ã –∫–∞–∂–¥–æ–≥–æ –∏–∑–¥–µ–ª–∏—è.",
                "photo": "masters_work.jpg",
                "delay": 5
            },
            {
                "text": "‚öôÔ∏è *–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏* (4/5)\n\n–°–µ–≥–æ–¥–Ω—è –≥–ª–∞–≤–Ω—ã–π —Ü–µ—Ö —Å–æ—á–µ—Ç–∞–µ—Ç –≤–µ–∫–æ–≤—ã–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏ —Ä—É—á–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–ø—É—Å–∫–∞—Ç—å –∫–∞–∫ –º–∞—Å—Å–æ–≤—É—é –ø–æ—Å—É–¥—É, —Ç–∞–∫ –∏ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Ü–µ–Ω—è—Ç –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä—ã –∏ –ª—é–±–∏—Ç–µ–ª–∏ —Å—Ç–µ–∫–ª–∞.",
                "photo": "technologies.jpg",
                "delay": 5
            },
            {
                "text": "üì∏ *–§–æ—Ç–æ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–µ—Ö–∞* (5/5)\n\n–í–æ—Ç –∫–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –≥–ª–∞–≤–Ω—ã–π —Ü–µ—Ö —Å–µ–≥–æ–¥–Ω—è - –ø—Ä–æ—Å—Ç–æ—Ä–Ω—ã–µ —Å–≤–µ—Ç–ª—ã–µ –ø–æ–º–µ—â–µ–Ω–∏—è, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –∏ –º–∞—Å—Ç–µ—Ä–∞ –∑–∞ —Ä–∞–±–æ—Ç–æ–π.",
                "photo": "workshop_now.jpg",
                "delay": 0
            }
        ]

        for msg in messages:
            try:
                photo_path = os.path.join(TOUR_IMAGES_DIR, msg["photo"])
                with open(photo_path, 'rb') as photo:
                    bot.send_photo(
                        chat_id,
                        photo,
                        caption=msg["text"],
                        parse_mode="Markdown"
                    )
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ {msg['photo']}: {e}")
                bot.send_message(
                    chat_id,
                    msg["text"],
                    parse_mode="Markdown"
                )

            if msg["delay"] > 0:
                time.sleep(msg["delay"])

            # –ü–æ—Å–ª–µ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –ø–æ–¥—Ä–∞–∑–¥–µ–ª–æ–≤
        show_zone_submenu(chat_id, bot, zone)

    def show_zone_submenu(chat_id, bot, zone):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –ø–æ–¥—Ä–∞–∑–¥–µ–ª–æ–≤ –∑–æ–Ω—ã (–∫–æ–º–Ω–∞—Ç—ã –∏–ª–∏ –∑–∞–ª—ã)"""
        if chat_id not in user_tour_status:
            user_tour_status[chat_id] = {
                "current_location": "main",
                "current_zone": None,
                "current_hall": None
            }

        if 'rooms' in zone:
            show_rooms_menu(chat_id, bot, zone)
        elif 'halls' in zone:
            show_halls_menu(chat_id, bot, zone)
    def show_rooms_menu(chat_id, bot, zone):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å—å –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ —Å–ª–æ–≤–∞—Ä–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π
        if chat_id not in user_tour_status:
            user_tour_status[chat_id] = {
                "current_location": "main",
                "current_zone": None,
                "current_hall": None
            }

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        for room in zone['rooms']:
            markup.add(types.KeyboardButton(room))
        markup.add(types.KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"))

        bot.send_message(
            chat_id,
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª:",
            reply_markup=markup
        )
        user_tour_status[chat_id]["current_location"] = "rooms"
    def show_halls_menu(chat_id, bot, zone):
        markup = create_markup(list(zone['halls'].keys()))
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–ª –º—É–∑–µ—è:", reply_markup=markup)
        user_tour_status[chat_id]["current_location"] = "halls"

    @bot.message_handler(
        func=lambda msg: user_tour_status.get(msg.chat.id) and msg.text in get_current_rooms_or_halls(msg.chat.id))
    def show_room_or_hall(message):
        chat_id = message.chat.id
        zone_name = user_tour_status[chat_id]["current_zone"]
        zone = TOUR_DATA[zone_name]

        if user_tour_status[chat_id]["current_location"] == "rooms":
            show_room_detail(chat_id, bot, zone['rooms'][message.text], message.text)
        elif user_tour_status[chat_id]["current_location"] == "halls":
            show_hall_detail(chat_id, bot, zone['halls'][message.text], message.text)

    def show_room_detail(chat_id, bot, room_data, room_name):
        send_message_with_photo(
            bot, chat_id,
            caption=f"üîç *{room_name}*\n\n{room_data['description']}",
            photo_path=room_data['photo'],
            parse_mode="Markdown",
            markup=create_markup(["‚¨ÖÔ∏è –ù–∞–∑–∞–¥"])
        )
        user_tour_status[chat_id]["current_location"] = "room_detail"

    def show_hall_detail(chat_id, bot, hall, hall_name):
        send_message_with_photo(
            bot, chat_id,
            caption=f"üèõÔ∏è *{hall_name}*\n\n{hall['description']}",
            photo_path=hall['photo'],
            parse_mode="Markdown"
        )

        markup = create_markup(list(hall['exhibits'].keys()) + ["‚¨ÖÔ∏è –ù–∞–∑–∞–¥"])
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ —ç–∫—Å–ø–æ–Ω–∞—Ç:", reply_markup=markup)

        user_tour_status[chat_id].update({
            "current_location": "hall_detail",
            "current_hall": hall_name
        })

    @bot.message_handler(
        func=lambda msg: user_tour_status.get(msg.chat.id) and msg.text in get_current_exhibits(msg.chat.id))
    def show_exhibit(message):
        chat_id = message.chat.id
        zone_name = user_tour_status[chat_id]["current_zone"]
        hall_name = user_tour_status[chat_id]["current_hall"]
        exhibit_name = message.text

        exhibit_data = TOUR_DATA[zone_name]['halls'][hall_name]['exhibits'][exhibit_name]

        send_message_with_photo(
            bot, chat_id,
            caption=f"üñºÔ∏è *{exhibit_name}*\n\n{exhibit_data['description']}",
            photo_path=exhibit_data['photo'],
            parse_mode="Markdown",
            markup=create_markup(["‚¨ÖÔ∏è –ù–∞–∑–∞–¥"])
        )
        user_tour_status[chat_id]["current_location"] = "exhibit_detail"

    @bot.message_handler(func=lambda msg: user_tour_status.get(msg.chat.id) and msg.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
    def handle_back(message):
        chat_id = message.chat.id
        current_location = user_tour_status[chat_id]["current_location"]
        zone_name = user_tour_status[chat_id]["current_zone"]
        zone = TOUR_DATA[zone_name]

        navigation_map = {
            "room_detail": lambda: show_rooms_menu(chat_id, bot, zone),
            "rooms": lambda: show_zones_menu(chat_id, bot),
            "hall_detail": lambda: show_halls_menu(chat_id, bot, zone),
            "halls": lambda: show_zones_menu(chat_id, bot),
            "exhibit_detail": lambda: show_hall_detail(
                chat_id, bot,
                zone['halls'][user_tour_status[chat_id]["current_hall"]],
                user_tour_status[chat_id]["current_hall"]
            ),
        }

        if current_location in navigation_map:
            navigation_map[current_location]()
        else:
            exit_tour(chat_id, bot)

    def exit_tour(chat_id, bot):
        user_tour_status.pop(chat_id, None)
        bot.send_message(
            chat_id,
            "–≠–∫—Å–∫—É—Ä—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
            reply_markup=get_main_menu()
        )

    # –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    def create_markup(buttons):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        for button in buttons:
            markup.add(types.KeyboardButton(button))
        if "‚¨ÖÔ∏è –ù–∞–∑–∞–¥" not in buttons:
            markup.add(types.KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"))
        return markup

    def send_message_with_photo(bot, chat_id, caption, photo_path=None, parse_mode=None, markup=None):
        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ñ–æ—Ç–æ –∏–ª–∏ –±–µ–∑"""
        try:
            if photo_path:
                full_path = os.path.join(TOUR_IMAGES_DIR, photo_path)
                with open(full_path, 'rb') as photo_file:
                    bot.send_photo(
                        chat_id,
                        photo_file,
                        caption=caption,
                        parse_mode=parse_mode,
                        reply_markup=markup
                    )
            else:
                bot.send_message(
                    chat_id,
                    caption,
                    parse_mode=parse_mode,
                    reply_markup=markup
                )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            bot.send_message(
                chat_id,
                caption,
                parse_mode=parse_mode,
                reply_markup=markup
            )

    def get_current_rooms_or_halls(chat_id):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç –∏–ª–∏ –∑–∞–ª–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–π –∑–æ–Ω—ã"""
        zone_name = user_tour_status.get(chat_id, {}).get("current_zone")
        if not zone_name or zone_name not in TOUR_DATA:
            return []

        zone = TOUR_DATA[zone_name]
        location = user_tour_status[chat_id]["current_location"]

        if location == "rooms":
            return list(zone.get('rooms', {}).keys())
        elif location == "halls":
            return list(zone.get('halls', {}).keys())
        return []

    def get_current_exhibits(chat_id):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —ç–∫—Å–ø–æ–Ω–∞—Ç–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–ª–∞"""
        zone_name = user_tour_status.get(chat_id, {}).get("current_zone")
        hall_name = user_tour_status.get(chat_id, {}).get("current_hall")

        if not all([zone_name, hall_name]):
            return []

        return list(TOUR_DATA.get(zone_name, {}).get('halls', {}).get(hall_name, {}).get('exhibits', {}).keys())

    @bot.message_handler(func=lambda msg: user_tour_status.get(msg.chat.id))
    def handle_other_commands(message):
        bot.send_message(
            message.chat.id,
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–ª–∏ '‚¨ÖÔ∏è –ù–∞–∑–∞–¥'",
            reply_markup=get_back_button()
        )