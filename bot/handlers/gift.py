from telebot import types
from bot.keyboards import get_main_menu, get_back_button
import random
import os

# –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ BASE_DIR —Å –∑–∞–∫—Ä—ã—Ç—ã–º–∏ —Å–∫–æ–±–∫–∞–º–∏
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
GIFT_IMAGES_DIR = os.path.join(BASE_DIR, 'static', 'gift_images')

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ —Å —Ñ–æ—Ç–æ
GIFT_ITEMS = [
    {
        "name": "–ù–∞–±–æ—Ä —à–∞–º–ø–∞–Ω–æ–∫ 'France'",
        "description": "–ò–¥–µ–∞–ª—å–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è —Ü–µ–Ω–∏—Ç–µ–ª–µ–π –∏–∑—ã—Å–∫–∞–Ω–Ω—ã—Ö –≤–µ—á–µ—Ä–æ–≤ –∏ —Ç–µ—Ö, –∫—Ç–æ –ª—é–±–∏—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –ø—Ä–∞–∑–¥–Ω–∏–∫–∞ –≤ –∫—Ä—É–≥—É –±–ª–∏–∑–∫–∏—Ö.",
        "price": "90.60 —Ä—É–±.",
        "link": "https://shopneman.by/catalog/shampanki/n-r-shampanok-france-2-sht-up-dr-s-1000-206-khr/",
        "gender": "female",
        "material": "crystal",
        "category": "–Ω–∞–±–æ—Ä—ã",
        "image": "france_shampagne.jpg"
    },
    {
        "name": "–ó–º–µ—è –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è",
        "description": "–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π —Ü–µ–Ω–∏—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∏ —Å–∏–º–≤–æ–ª–∏—á–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏, –∞ —Ç–∞–∫–∂–µ –ª—é–±–∏—Ç —É–∫—Ä–∞—à–∞—Ç—å –¥–æ–º –Ω–µ–æ–±—ã—á–Ω—ã–º–∏ –¥–µ—Ç–∞–ª—è–º–∏.",
        "price": "24.60 —Ä—É–±.",
        "link": "https://shopneman.by/catalog/dekorativnye-izdeliya/dekor-izdelie-zmeya-600-14-khr/",
        "gender": "unisex",
        "material": "crystal",
        "category": "–¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è",
        "image": "crystal_snake.jpg"
    },
    {
        "name": "–ù–∞–±–æ—Ä —Ö—Ä—É—Å—Ç–∞–ª—å–Ω—ã—Ö —à–∞—Ö–º–∞—Ç",
        "description": "–ü–æ–¥–∞—Ä–æ–∫ –¥–ª—è —Å—Ç—Ä–∞—Ç–µ–≥–æ–≤ –∏ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥—á–µ—Ä–∫–Ω—ë—Ç —Å—Ç–∞—Ç—É—Å –∏ —Å—Ç–∞–Ω–µ—Ç —É–∫—Ä–∞—à–µ–Ω–∏–µ–º –ª—é–±–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ –∏–ª–∏ –≥–æ—Å—Ç–∏–Ω–æ–π.",
        "price": "839.70 —Ä—É–±.",
        "link": "https://shopneman.by/catalog/dekorativnye-izdeliya/nabor-dekor-izdeliy-sh-d-bestsv-chern-p-u-t-600-14-khr_1/",
        "gender": "male",
        "material": "crystal",
        "category": "–Ω–∞–±–æ—Ä—ã",
        "image": "chess_set.jpg"
    },
    {
        "name": "–î–µ–∫–æ—Ä.–≤–∞–∑–∞ '–ê–º–µ–ª–∏—è'",
        "description": "–û—Ç–ª–∏—á–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –ª—é–±–∏—Ç –Ω–∞–ø–æ–ª–Ω—è—Ç—å –¥–æ–º –∫—Ä–∞—Å–æ—Ç–æ–π –∏ –≥–∞—Ä–º–æ–Ω–∏–µ–π, —Ü–µ–Ω–∏—Ç —Å—Ç–∏–ª—å–Ω—ã–µ –∏–Ω—Ç–µ—Ä—å–µ—Ä–Ω—ã–µ –¥–µ—Ç–∞–ª–∏.",
        "price": "161.10 —Ä—É–±.",
        "link": "https://shopneman.by/catalog/floristika/dekor-vaza-ameliya-tsvetnaya-pudra-1-velbs/",
        "gender": "female",
        "material": "glass",
        "category": "–¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è",
        "image": "amelia_vase.jpg"
    },
    {
        "name": "–í–∞–∑–∞-—Ü–∏–ª–∏–Ω–¥—Ä",
        "description": "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è –ø—Ä–∞–∫—Ç–∏—á–Ω—ã—Ö –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Ü–µ–Ω—è—Ç –ª–∞–∫–æ–Ω–∏—á–Ω–æ—Å—Ç—å, –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç—å –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å.",
        "price": "286.00 —Ä—É–±.",
        "link": "https://shopneman.by/catalog/floristika/vaza-tsilindr-v-170-s-kr-1000-221-khr/",
        "gender": "female",
        "material": "crystal",
        "category": "–¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è",
        "image": "cylinder_vase.jpg"
    },
    {
        "name": "–í–∞–∑–∞ –¥–ª—è —Å–µ—Ä–≤–∏—Ä–æ–≤–∫–∏",
        "description": "–ü–æ–¥–æ–π–¥—ë—Ç —Ç–µ–º, –∫—Ç–æ –ª—é–±–∏—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≥–æ—Å—Ç–µ–π –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å —É—é—Ç–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –∑–∞ —Å—Ç–æ–ª–æ–º.",
        "price": "75.00 —Ä—É–±.",
        "link": "https://shopneman.by/catalog/servirovka/vaza-d-servirovki-stola-900-196-1-velkhr/",
        "gender": "unisex",
        "material": "crystal",
        "category": "–¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è",
        "image": "serving_vase.jpg"
    },
    {
        "name": "–í–∞–∑–∞ –¥–ª—è —Ñ—Ä—É–∫—Ç–æ–≤",
        "description": "–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è —â–µ–¥—Ä—ã—Ö –∏ –≥–æ—Å—Ç–µ–ø—Ä–∏–∏–º–Ω—ã—Ö –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ª—é–±—è—Ç —Ä–∞–¥–æ–≤–∞—Ç—å –±–ª–∏–∑–∫–∏—Ö –≤–∫—É—Å–Ω—ã–º–∏ —É–≥–æ—â–µ–Ω–∏—è–º–∏.",
        "price": "398.90 —Ä—É–±.",
        "link": "https://shopneman.by/catalog/servirovka/vaza-d-fruktov-sinyaya-pudra-pod-up-tk-vne-gruppy-1-velkhr/",
        "gender": "unisex",
        "material": "crystal",
        "category": "–ø–æ—Å—É–¥–∞",
        "image": "fruit_vase.jpg"
    },
    {
        "name": "–í–∞–∑–∞ '–û—Ç—Ç–µ–ø–µ–ª—å'",
        "description": "–ò–¥–µ—è –¥–ª—è –ø–æ–¥–∞—Ä–∫–∞ —Ç–µ–º, –∫—Ç–æ —Ü–µ–Ω–∏—Ç –ø–µ—Ä–µ–º–µ–Ω—ã, –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –∏ —É–º–µ–µ—Ç –≤–∏–¥–µ—Ç—å –∫—Ä–∞—Å–æ—Ç—É –≤ –∫–∞–∂–¥–æ–º –¥–Ω–µ.",
        "price": "176.10 —Ä—É–±.",
        "link": "https://shopneman.by/catalog/floristika/vaza-d-tsvetov-ottepel-chern-nalepy-krakle-bs/",
        "gender": "female",
        "material": "glass",
        "category": "–¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è",
        "image": "ottepel_vase.jpg"
    },
    {
        "name": "–ú–µ–Ω–∞–∂–Ω–∏—Ü–∞ '–¢—Ä–∏–æ'",
        "description": "–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è –¥—Ä—É–∂–µ–ª—é–±–Ω—ã—Ö —Ö–æ–∑—è–µ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ª—é–±—è—Ç —Å–æ–±–∏—Ä–∞—Ç—å –∫–æ–º–ø–∞–Ω–∏—é –∑–∞ —Å—Ç–æ–ª–æ–º.",
        "price": "50.90 —Ä—É–±.",
        "link": "https://shopneman.by/catalog/servirovka/menazhnitsa-trio-100-8-ris-ot-formy-bs/",
        "gender": "unisex",
        "material": "glass",
        "category": "–ø–æ—Å—É–¥–∞",
        "image": "trio_tray.jpg"
    },
    {
        "name": "–ù–∞–±–æ—Ä –±–æ–∫–∞–ª–æ–≤ –¥–ª—è —à–∞–º–ø–∞–Ω—Å–∫–æ–≥–æ 'France'",
        "description": "–ü–æ–¥–∞—Ä–æ–∫ –¥–ª—è —Ü–µ–Ω–∏—Ç–µ–ª–µ–π —Å—Ç–∏–ª—è –∏ —Ç–æ—Ä–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–∏—Ç —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –ª—é–±–æ–º—É –ø—Ä–∞–∑–¥–Ω–∏–∫—É.",
        "price": "231.10 —Ä—É–±.",
        "link": "https://shopneman.by/catalog/bokaly/n-r-bokalov-sh-france-6-sht-120-g-up-dr-s-1000-206-khr/",
        "gender": "unisex",
        "material": "crystal",
        "category": "–Ω–∞–±–æ—Ä—ã",
        "image": "france_glasses.jpg"
    },
    {
        "name": "–î–µ–∫–æ—Ä.—è–π—Ü–æ (–∂–µ–ª—Ç–æ–µ) '–í–æ–∑—Ä–æ–∂–¥–µ–Ω–∏–µ'",
        "description": "–°–∏–º–≤–æ–ª–∏—á–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ü–µ–Ω–∏—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, –Ω–æ–≤—ã–µ –Ω–∞—á–∏–Ω–∞–Ω–∏—è –∏ –ª—é–±–∏—Ç –Ω–µ–æ–±—ã—á–Ω—ã–µ —É–∫—Ä–∞—à–µ–Ω–∏—è –¥–ª—è –¥–æ–º–∞.",
        "price": "175.30 —Ä—É–±.",
        "link": "https://shopneman.by/catalog/dekorativnye-izdeliya/dekor-yaytso-zheltoe-met-podst-vozrozhdenie-p-u-vne-gruppy-stskh/",
        "gender": "unisex",
        "material": "crystal",
        "category": "–¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è",
        "image": "egg_decor.jpg"
    },
    {
        "name": "–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –∏–∑–¥–µ–ª–∏–µ '–ú–µ—à–æ—á–µ–∫'",
        "description": "–ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥–æ–π–¥—ë—Ç –¥–ª—è —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö –∏ –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã—Ö –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ª—é–±—è—Ç —Å—é—Ä–ø—Ä–∏–∑—ã –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –≤ –∏–Ω—Ç–µ—Ä—å–µ—Ä–µ.",
        "price": "48.20 —Ä—É–±.",
        "link": "https://shopneman.by/catalog/dekorativnye-izdeliya/dekor-izdelie-meshochek-zelenyy-tsvetnaya-pudra-2-velbs/",
        "gender": "unisex",
        "material": "glass",
        "category": "–¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è",
        "image": "glass_pouch.jpg"
    }
]


def filter_gifts(criteria):
    """–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ–¥–∞—Ä–∫–æ–≤ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º"""
    filtered = GIFT_ITEMS.copy()

    if 'price' in criteria:
        price = criteria['price']
        if price == "150":
            filtered = [item for item in filtered if float(item["price"].split()[0]) <= 150]
        elif price == "150-300":
            filtered = [item for item in filtered if 150 < float(item["price"].split()[0]) <= 300]
        elif price == "300-500":
            filtered = [item for item in filtered if 300 < float(item["price"].split()[0]) <= 500]
        elif price == "500":
            filtered = [item for item in filtered if float(item["price"].split()[0]) > 500]

    if 'gender' in criteria:
        gender = criteria['gender']
        filtered = [item for item in filtered if item["gender"] == gender or item["gender"] == "unisex"]

    if 'material' in criteria:
        material = criteria['material']
        filtered = [item for item in filtered if item["material"] == material]

    if 'category' in criteria:
        category = criteria['category']
        filtered = [item for item in filtered if category.lower() in item["category"].lower()]

    return filtered


def send_gifts(chat_id, bot, items, title="üéÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–¥–±–æ—Ä–∞:"):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –ø–æ–¥–∞—Ä–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å —Ñ–æ—Ç–æ"""
    if not items:
        bot.send_message(
            chat_id,
            "üòï –ü–æ –≤–∞—à–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞.",
            reply_markup=get_back_button()
        )
        return

    bot.send_message(chat_id, title)

    for item in items[:3]:  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–µ 3 –ø–æ–¥–∞—Ä–∫–∞
        try:
            image_path = os.path.join(GIFT_IMAGES_DIR, item["image"])
            with open(image_path, 'rb') as photo:
                bot.send_photo(
                    chat_id,
                    photo,
                    caption=(
                        f"üéÅ <b>{item['name']}</b>\n\n"
                        f"{item['description']}\n"
                        f"üíµ –¶–µ–Ω–∞: {item['price']}\n"
                        f"üîó <a href='{item['link']}'>–ü–æ–¥—Ä–æ–±–Ω–µ–µ</a>"
                    ),
                    parse_mode="HTML"
                )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ: {e}")
            bot.send_message(
                chat_id,
                (
                    f"üéÅ <b>{item['name']}</b>\n\n"
                    f"{item['description']}\n"
                    f"üíµ –¶–µ–Ω–∞: {item['price']}\n"
                    f"üîó <a href='{item['link']}'>–ü–æ–¥—Ä–æ–±–Ω–µ–µ</a>"
                ),
                parse_mode="HTML"
            )

    if len(items) > 3:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("–ü–æ–∫–∞–∑–∞—Ç—å –µ—â–µ"), types.KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"))
        bot.send_message(chat_id, f"–ù–∞–π–¥–µ–Ω–æ {len(items)} –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤. –•–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å –±–æ–ª—å—à–µ?", reply_markup=markup)
    else:
        bot.send_message(chat_id, "–≠—Ç–æ –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É.", reply_markup=get_back_button())


# ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, –∫–∞–∫ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –∫–æ–¥–µ)

def register_handlers(bot):
    user_gift_state = {}

    @bot.message_handler(func=lambda msg: msg.text == "üéÅ –ü–æ–¥–æ–±—Ä–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫")
    def start_gift_selection(message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        buttons = [
            types.KeyboardButton("üí∞ –ü–æ –±—é–¥–∂–µ—Ç—É"),
            types.KeyboardButton("üë´ –ü–æ –ø–æ–ª—É"),
            types.KeyboardButton("üíé –°—Ç–µ–∫–ª–æ –∏–ª–∏ —Ö—Ä—É—Å—Ç–∞–ª—å"),
            types.KeyboardButton("üì¶ –ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"),
            types.KeyboardButton("üèÜ –õ—É—á—à–∏–µ –ø–æ–¥–∞—Ä–∫–∏"),
            types.KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
        ]
        markup.add(*buttons)

        bot.send_message(
            message.chat.id,
            "üéÅ –ü–û–î–û–ë–†–ê–¢–¨ –ü–û–î–ê–†–û–ö –ü–û:\n\n"
            "üí∞ - –ë–Æ–î–ñ–ï–¢–£\n"
            "üë´ - –ü–û–õ–£ –ü–û–õ–£–ß–ê–¢–ï–õ–Ø\n"
            "üíé - –ú–ê–¢–ï–†–ò–ê–õ–£ (–°–¢–ï–ö–õ–û/–•–†–£–°–¢–ê–õ–¨)\n"
            "üì¶ - –ö–ê–¢–ï–ì–û–†–ò–ò –ò–ó–î–ï–õ–ò–Ø\n"
            "üèÜ - –ü–û–ü–£–õ–Ø–†–ù–´–ï –í–ê–†–ò–ê–ù–¢–´",
            reply_markup=markup
        )

    # –û—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, –∫–∞–∫ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –∫–æ–¥–µ
    # ...
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ –±—é–¥–∂–µ—Ç—É
    @bot.message_handler(func=lambda msg: msg.text == "üí∞ –ü–æ –±—é–¥–∂–µ—Ç—É")
    def select_by_budget(message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        buttons = [
            types.KeyboardButton("150"),
            types.KeyboardButton("150-300"),
            types.KeyboardButton("300-500"),
            types.KeyboardButton("500"),
            types.KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
        ]
        markup.add(*buttons)

        bot.send_message(
            message.chat.id,
            "üí∞ –í–´–ë–ï–†–ò–¢–ï –ë–Æ–î–ñ–ï–¢:\n\n"
            "150 - –¥–æ 150 —Ä—É–±.\n"
            "150-300 - –æ—Ç 150 –¥–æ 300 —Ä—É–±.\n"
            "300-500 - –æ—Ç 300 –¥–æ 500 —Ä—É–±.\n"
            "500 - –æ—Ç 500 —Ä—É–±. –∏ –≤—ã—à–µ",
            reply_markup=markup
        )

    @bot.message_handler(func=lambda msg: msg.text in ["150", "150-300", "300-500", "500"])
    def show_gifts_by_budget(message):
        chat_id = message.chat.id
        price = message.text
        user_gift_state[chat_id] = {"criteria": {"price": price}}

        filtered_gifts = filter_gifts({"price": price})
        send_gifts(chat_id, bot, filtered_gifts, f"üéÅ –ü–æ–¥–∞—Ä–∫–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {price} —Ä—É–±.:")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ –ø–æ–ª—É
    @bot.message_handler(func=lambda msg: msg.text == "üë´ –ü–æ –ø–æ–ª—É")
    def select_by_gender(message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        buttons = [
            types.KeyboardButton("üë® –ú—É–∂—á–∏–Ω–µ"),
            types.KeyboardButton("üë© –ñ–µ–Ω—â–∏–Ω–µ"),
            types.KeyboardButton("üë´ –£–Ω–∏—Å–µ–∫—Å"),
            types.KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
        ]
        markup.add(*buttons)

        bot.send_message(
            message.chat.id,
            "üë´ –î–õ–Ø –ö–û–ì–û –ü–û–î–ë–ò–†–ê–ï–ú –ü–û–î–ê–†–û–ö?\n\n"
            "üë® - –ú—É–∂—á–∏–Ω–µ\n"
            "üë© - –ñ–µ–Ω—â–∏–Ω–µ\n"
            "üë´ - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç",
            reply_markup=markup
        )

    @bot.message_handler(func=lambda msg: msg.text in ["üë® –ú—É–∂—á–∏–Ω–µ", "üë© –ñ–µ–Ω—â–∏–Ω–µ", "üë´ –£–Ω–∏—Å–µ–∫—Å"])
    def show_gifts_by_gender(message):
        chat_id = message.chat.id
        gender_map = {
            "üë® –ú—É–∂—á–∏–Ω–µ": "male",
            "üë© –ñ–µ–Ω—â–∏–Ω–µ": "female",
            "üë´ –£–Ω–∏—Å–µ–∫—Å": "unisex"
        }
        gender = gender_map[message.text]
        user_gift_state[chat_id] = {"criteria": {"gender": gender}}

        filtered_gifts = filter_gifts({"gender": gender})
        send_gifts(chat_id, bot, filtered_gifts, f"üéÅ –ü–æ–¥–∞—Ä–∫–∏ –¥–ª—è {message.text}:")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ –º–∞—Ç–µ—Ä–∏–∞–ª—É
    @bot.message_handler(func=lambda msg: msg.text == "üíé –°—Ç–µ–∫–ª–æ –∏–ª–∏ —Ö—Ä—É—Å—Ç–∞–ª—å")
    def select_by_material(message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        buttons = [
            types.KeyboardButton("ü™î –°—Ç–µ–∫–ª–æ"),
            types.KeyboardButton("üíé –•—Ä—É—Å—Ç–∞–ª—å"),
            types.KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
        ]
        markup.add(*buttons)

        bot.send_message(
            message.chat.id,
            "üíé –í–´–ë–ï–†–ò–¢–ï –ú–ê–¢–ï–†–ò–ê–õ:\n\n"
            "ü™î - –°—Ç–µ–∫–ª—è–Ω–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è\n"
            "üíé - –•—Ä—É—Å—Ç–∞–ª—å–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è",
            reply_markup=markup
        )

    @bot.message_handler(func=lambda msg: msg.text in ["ü™î –°—Ç–µ–∫–ª–æ", "üíé –•—Ä—É—Å—Ç–∞–ª—å"])
    def show_gifts_by_material(message):
        chat_id = message.chat.id
        material_map = {
            "ü™î –°—Ç–µ–∫–ª–æ": "glass",
            "üíé –•—Ä—É—Å—Ç–∞–ª—å": "crystal"
        }
        material = material_map[message.text]
        user_gift_state[chat_id] = {"criteria": {"material": material}}

        filtered_gifts = filter_gifts({"material": material})
        send_gifts(chat_id, bot, filtered_gifts, f"üéÅ {message.text} –ø–æ–¥–∞—Ä–∫–∏:")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    @bot.message_handler(func=lambda msg: msg.text == "üì¶ –ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
    def select_by_category(message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        buttons = [
            types.KeyboardButton("üçΩÔ∏è –ü–æ—Å—É–¥–∞"),
            types.KeyboardButton("üñºÔ∏è –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ"),
            types.KeyboardButton("üéÅ –ù–∞–±–æ—Ä—ã"),
            types.KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
        ]
        markup.add(*buttons)

        bot.send_message(
            message.chat.id,
            "üì¶ –í–´–ë–ï–†–ò–¢–ï –ö–ê–¢–ï–ì–û–†–ò–Æ:\n\n"
            "üçΩÔ∏è - –ü–æ—Å—É–¥–∞ (–≤–∞–∑—ã, –±–æ–∫–∞–ª—ã, –≥—Ä–∞—Ñ–∏–Ω—ã)\n"
            "üñºÔ∏è - –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è\n"
            "üéÅ - –ü–æ–¥–∞—Ä–æ—á–Ω—ã–µ –Ω–∞–±–æ—Ä—ã",
            reply_markup=markup
        )

    @bot.message_handler(func=lambda msg: msg.text in ["üçΩÔ∏è –ü–æ—Å—É–¥–∞", "üñºÔ∏è –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ", "üéÅ –ù–∞–±–æ—Ä—ã"])
    def show_gifts_by_category(message):
        chat_id = message.chat.id
        category_map = {
            "üçΩÔ∏è –ü–æ—Å—É–¥–∞": "–ü–æ—Å—É–¥–∞",
            "üñºÔ∏è –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ": "–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è",
            "üéÅ –ù–∞–±–æ—Ä—ã": "–ù–∞–±–æ—Ä—ã"
        }
        category = category_map[message.text]
        user_gift_state[chat_id] = {"criteria": {"category": category}}

        filtered_gifts = filter_gifts({"category": category})
        send_gifts(chat_id, bot, filtered_gifts, f"üéÅ –ü–æ–¥–∞—Ä–∫–∏: {message.text}")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫–∞–∑–∞ –ª—É—á—à–∏—Ö –ø–æ–¥–∞—Ä–∫–æ–≤
    @bot.message_handler(func=lambda msg: msg.text == "üèÜ –õ—É—á—à–∏–µ –ø–æ–¥–∞—Ä–∫–∏")
    def show_best_gifts(message):
        chat_id = message.chat.id

        def price_to_float(price_str):
            try:
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã —Ü–µ–Ω
                if '-' in price_str:
                    # –ë–µ—Ä–µ–º —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "150-300" -> 225)
                    parts = [float(p.strip(' —Ä—É–±.')) for p in price_str.split('-')]
                    return sum(parts) / 2
                elif '+' in price_str:
                    # –î–ª—è —Ü–µ–Ω —Ç–∏–ø–∞ "500+" –±–µ—Ä–µ–º –Ω–∏–∂–Ω—é—é –≥—Ä–∞–Ω–∏—Ü—É
                    return float(price_str.strip('+ —Ä—É–±.'))
                else:
                    return float(price_str.strip(' —Ä—É–±.'))
            except:
                return 0.0  # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 0

        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É–±—ã–≤–∞–Ω–∏—é —Ü–µ–Ω—ã
        best_gifts = sorted(
            GIFT_ITEMS,
            key=lambda x: price_to_float(x["price"]),
            reverse=True
        )[:5]  # –ë–µ—Ä–µ–º —Ç–æ–ø-5

        for item in best_gifts:
            gift_text = (
                f"üèÜ <b>{item['name']}</b>\n\n"
                f"{item['description']}\n"
                f"üíµ –¶–µ–Ω–∞: {item['price']}\n"
                f"üîó –°—Å—ã–ª–∫–∞: {item['link']}"
            )
            bot.send_message(
                chat_id,
                gift_text,
                parse_mode="HTML",
                reply_markup=get_back_button()
            )

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü–æ–∫–∞–∑–∞—Ç—å –µ—â–µ"
    @ bot.message_handler(func=lambda msg: msg.text == "–ü–æ–∫–∞–∑–∞—Ç—å –µ—â–µ")

    def show_more_gifts(message):
        chat_id = message.chat.id
        if chat_id not in user_gift_state:
            bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –ø–æ–¥–±–æ—Ä –∑–∞–Ω–æ–≤–æ.", reply_markup=get_main_menu())
            return

        criteria = user_gift_state[chat_id].get("criteria", {})
        filtered_gifts = filter_gifts(criteria)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ª–µ–¥—É—é—â–∏–µ 3 –ø–æ–¥–∞—Ä–∫–∞
        already_shown = user_gift_state[chat_id].get("shown_count", 0)
        next_gifts = filtered_gifts[already_shown:already_shown + 3]

        if not next_gifts:
            bot.send_message(chat_id, "–≠—Ç–æ –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É.", reply_markup=get_back_button())
            return

        for item in next_gifts:
            gift_text = (
                f"üéÅ <b>{item['name']}</b>\n\n"
                f"{item['description']}\n"
                f"üíµ –¶–µ–Ω–∞: {item['price']}\n"
                f"üîó –°—Å—ã–ª–∫–∞: {item['link']}"
            )
            bot.send_message(
                chat_id,
                gift_text,
                parse_mode="HTML",
                reply_markup=get_back_button()
            )

        user_gift_state[chat_id]["shown_count"] = already_shown + len(next_gifts)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –µ—â–µ –ø–æ–¥–∞—Ä–∫–∏ –¥–ª—è –ø–æ–∫–∞–∑–∞
        if len(filtered_gifts) > already_shown + len(next_gifts):
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(types.KeyboardButton("–ü–æ–∫–∞–∑–∞—Ç—å –µ—â–µ"), types.KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"))

            bot.send_message(
                chat_id,
                f"–ü–æ–∫–∞–∑–∞–Ω–æ {already_shown + len(next_gifts)} –∏–∑ {len(filtered_gifts)}. –•–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å –±–æ–ª—å—à–µ?",
                reply_markup=markup
            )
        else:
            bot.send_message(
                chat_id,
                "–≠—Ç–æ –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É.",
                reply_markup=get_back_button()
            )

    @bot.message_handler(func=lambda msg: msg.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
    def handle_back(message):
        chat_id = message.chat.id

        # –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        if chat_id not in user_gift_state:
            bot.send_message(chat_id, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=get_main_menu())
            return

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        current_state = user_gift_state[chat_id].get('navigation', [])

        # –ï—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø—É—Å—Ç–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        if not current_state:
            bot.send_message(chat_id, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=get_main_menu())
            del user_gift_state[chat_id]
            return

        # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏
        previous_state = current_state.pop()

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫—É–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è
        if previous_state == "main_menu":
            bot.send_message(chat_id, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=get_main_menu())
            del user_gift_state[chat_id]
        elif previous_state == "gift_selection":
            start_gift_selection(message)
        elif previous_state == "by_budget":
            select_by_budget(message)
        elif previous_state == "by_gender":
            select_by_gender(message)
        elif previous_state == "by_material":
            select_by_material(message)
        elif previous_state == "by_category":
            select_by_category(message)
        else:
            bot.send_message(chat_id, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=get_main_menu())
            del user_gift_state[chat_id]

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        user_gift_state[chat_id]['navigation'] = current_state